int LCS_Helper(string &x,string &y,int n,int m,vector<vector<int>> &tab)
    {
        if(n==0||m==0){
            return 0;
        }

        //Memo code
        if(tab[n][m]!=-1){
            return tab[n][m];
        }

        if(x[n-1]==y[m-1]){
            tab[n][m] = 1+LCS_Helper(x,y,n-1,m-1,tab);
            return tab[n][m];
        }else{
            tab[n][m] = max(LCS_Helper(x,y,n-1,m,tab),LCS_Helper(x,y,n,m-1,tab));
            return tab[n][m];
        }
    }
    
    
    int longestCommonSubsequence(string x, string y) {
        
        int n = x.length();
        int m = y.length();
        
        vector<vector<int>> tab(n+1,vector<int>(m+1,-1));
    
        return LCS_Helper(x,y,n,m,tab);     
    }

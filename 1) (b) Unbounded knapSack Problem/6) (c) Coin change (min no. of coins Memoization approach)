int minCoins_Helper(int coins[], int M, int V,vector<vector<int>> &tab) 
	{ 
	    // Your code goes here
	    
	    //Base cases
	    if(V==0 && M>0){
	        return 0;
	    }
	    
	    if(M==1){
	        if(V%coins[M-1]!=0){
	            return INT_MAX-1;
	        }else{
	            return V/coins[M-1];
	        }
	    }
	    
	    if(M==0){
	        return INT_MAX-1;
	    }
        
        
        //Memo
        if(tab[M][V]!=-1){
            return tab[M][V];
        }
    
        
        
        if(coins[M-1]<=V){
            tab[M][V] = min(1+minCoins_Helper(coins,M,V-coins[M-1],tab),minCoins_Helper(coins,M-1,V,tab));
            return tab[M][V];
        }else{
            tab[M][V] = minCoins_Helper(coins,M-1,V,tab);
            return tab[M][V];
        }
	}
	
	int minCoins(int coins[],int M,int V)
	{
	    
	    vector<vector<int>> tab(M+1,vector<int>(V+1,-1));
	    
	    int ans = minCoins_Helper(coins,M,V,tab); 
	    
	    return ans==2147483646?-1:ans;
	}

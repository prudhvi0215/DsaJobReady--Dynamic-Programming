int solve(string str,int i,int j,bool isTrue,unordered_map<string,int> &tab)
    {
        //Base case
        if(i>j){
            return 0;
        }
        
        if(i==j){
            if(isTrue){
                if(str[i]=='T'){
                    return 1;
                }else{
                    return 0;
                }
            }else{
                if(str[i]=='F'){
                    return 1;
                }else{
                    return 0;
                }
            }
        }
        
        //Memo code
        string temp = to_string(i);
        temp.push_back(' ');
        temp.append(to_string(j));
        temp.push_back(' ');
        temp.append(to_string(isTrue));
        
        if(tab.find(temp)!=tab.end()){
            return tab[temp];
        }
        
        
        int ans = 0;
        
        for(int k=i+1;k<=j-1;k+=2)
        {
            int lT = solve(str,i,k-1,true,tab);
            int lF = solve(str,i,k-1,false,tab);
            int rT = solve(str,k+1,j,true,tab);
            int rF = solve(str,k+1,j,false,tab);
            
            if(str[k]=='&')
            {
                if(isTrue){
                    ans = ans + (lT * rT);
                }else{
                    ans = ans + (lT*rF) + (lF*rT) + (lF*rF);
                }
            }else if(str[k]=='|')
            {
                if(isTrue){
                    ans = ans + (lT*rF) + (lF*rT) + (lT*rT);
                }else{
                    ans = ans + (lF*rF);
                }
            }else if(str[k]=='^')
            {
                if(isTrue){
                    ans = ans + (lT*rF) + (lF*rT);
                }else{
                    ans = ans + (lT*rT) + (lF*rF);
                }
            }
        }
        
        //Save for future use
        tab[temp] = ans%1003;
        
        return tab[temp];
    }


    int countWays(int N, string S){
        // code here
        bool isTrue = true;
        unordered_map<string,int> tab;
        
        return solve(S,0,S.length()-1,isTrue,tab);
    }
